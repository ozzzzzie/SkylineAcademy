@model IEnumerable<SkylineAcademy.Models.Grade>

@{
    ViewData["Title"] = "Grade";
}

<br />

<p>

    @if (User.IsInRole("Admin"))
    {
        <a asp-area="" asp-controller="AdministratorDashboard" asp-action="Index"><button type="button" class="btn btn-outline-primary">Back to Dashboard</button></a>

    }
    else if (User.IsInRole("Student"))
    {
        <a asp-area="" asp-controller="StudentDashboard" asp-action="Index"><button type="button" class="btn btn-outline-primary">Back to Dashboard</button></a>

    }
    else if (User.IsInRole("Teacher"))
    {
        <a asp-area="" asp-controller="TeacherDashboard" asp-action="Index"><button type="button" class="btn btn-outline-primary">Back to Dashboard</button></a>

    }
    else if (User.IsInRole("SuperAdmin"))
    {
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index"><button type="button" class="btn btn-outline-primary">Home</button></a>
    }

</p>

<h1 align="center">Grades</h1>
<br />
@if (User.IsInRole("Admin"))
{
    <p align="right">
        <a asp-action="Create"><button type="button" class="btn btn-outline-primary">Create New</button></a>
    </p>
}
else if (User.IsInRole("SuperAdmin"))
{
    <p align="right">
        <a asp-action="Create"><button type="button" class="btn btn-outline-primary">Create New</button></a>
    </p>
}
else if (User.IsInRole("Teacher"))
{
    <p align="right">
        <a asp-action="Create"><button type="button" class="btn btn-outline-primary">Create New</button></a>
    </p>
}
else
{
    <br />
}

<style>
    .grid-container {
        overflow: hidden;
    }

    .grid-container table td {
        white-space: normal;
        word-wrap: break-word;
    }
</style>

<div class="table grid-container">
    @(
        Html
     .Grid(Model)
     .Build(columns =>
     {
         columns.Add(model => model.EnrollementId).Titled("Enrollement ID");
         columns.Add(model => model.Midterm).Titled("Midterm");
         columns.Add(model => model.Final).Titled("Final");
         columns.Add(model => model.Total).Titled("Total");
         columns.Add(model => model.Passedcourse).Titled("Pass/Fail").RenderedAs(model =>
    {
                if (model.Passedcourse == true)
                {
                    return "Passed";
                }
                else
                {
                    return "Failed";
                }
            });

            if (User.IsInRole("Admin"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Edit", "Edit", new
                {
                    id =
                model.GradeId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.GradeId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Delete", "Delete", new
                {
                    id =
                model.GradeId
                })).Filterable(false);
            }
            else if (User.IsInRole("Student"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.GradeId
                })).Filterable(false);
            }
            else if (User.IsInRole("Teacher"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.GradeId
                })).Filterable(false);

                columns.Add().RenderedAs(model => Html.ActionLink("Edit", "Edit", new
                {
                    id =
                model.GradeId
                })).Filterable(false);
                columns.Add().RenderedAs(model => Html.ActionLink("Delete", "Delete", new
                {
                    id =
                model.GradeId
                })).Filterable(false);
            }
            else if (User.IsInRole("SuperAdmin"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Edit", "Edit", new
                {
                    id =
                model.GradeId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.GradeId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Delete", "Delete", new
                {
                    id =
                model.GradeId
                })).Filterable(false);
            }
 })

 .Empty("No data found")
 .Filterable()
 .Sortable()
 .Pageable(pager =>
 {
     pager.RowsPerPage = 10;
 })
)
</div>
@section Scripts {
    <script>
        document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
    </script>
}