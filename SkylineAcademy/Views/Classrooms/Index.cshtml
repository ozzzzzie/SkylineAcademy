@model IEnumerable<SkylineAcademy.Models.Classroom>

@{
    ViewData["Title"] = "Classrooms";
}

<br />

<p>

    @if (User.IsInRole("Admin"))
    {
        <a asp-area="" asp-controller="AdministratorDashboard" asp-action="Index"><button type="button" class="btn btn-outline-primary">Back to Dashboard</button></a>

    }
    else if (User.IsInRole("Student"))
    {
        <a asp-area="" asp-controller="StudentDashboard" asp-action="Index"><button type="button" class="btn btn-outline-primary">Back to Dashboard</button></a>

    }
    else if (User.IsInRole("Teacher"))
    {
        <a asp-area="" asp-controller="TeacherDashboard" asp-action="Index"><button type="button" class="btn btn-outline-primary">Back to Dashboard</button></a>

    }
    else if (User.IsInRole("SuperAdmin"))
    {
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index"><button type="button" class="btn btn-outline-primary">Home</button></a>
    }

</p>

<h1 align="center">Classrooms</h1>
<br />
@if (User.IsInRole("Admin"))
{
    <p align="right">
        <a asp-action="Create"><button type="button" class="btn btn-outline-primary">Create New</button></a>
    </p>
}
else if (User.IsInRole("SuperAdmin"))
{
    <p align="right">
        <a asp-action="Create"><button type="button" class="btn btn-outline-primary">Create New</button></a>
    </p>
}
else
{
    <br />
}

<div class="table grid-container">
@(
Html
 .Grid(Model)
 .Build(columns =>
 {
     columns.Add(model => model.ClassroomId).Titled("Classroom Number");
     columns.Add(model => model.Facilities).Titled("Facilities");
     columns.Add(model => model.Capacity).Titled("Capacity");





            if (User.IsInRole("Admin"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Edit", "Edit", new
                {
                    id =
                model.ClassroomId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.ClassroomId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Delete", "Delete", new
                {
                    id =
                model.ClassroomId
                })).Filterable(false);
            }
            else if (User.IsInRole("Student"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.ClassroomId
                })).Filterable(false);
            }
            else if (User.IsInRole("Teacher"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.ClassroomId
                })).Filterable(false);
            }
            else if (User.IsInRole("SuperAdmin"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Edit", "Edit", new
                {
                    id =
                model.ClassroomId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.ClassroomId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Delete", "Delete", new
                {
                    id =
                model.ClassroomId
                })).Filterable(false);
            }

 })

 .Empty("No data found")
 .Filterable()
 .Sortable()
 .Pageable(pager =>
 {
     pager.RowsPerPage = 10;
 })
)
</div>
@section Scripts {
    <script>
        document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
    </script>
}