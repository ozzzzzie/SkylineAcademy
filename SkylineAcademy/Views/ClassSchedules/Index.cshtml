@model IEnumerable<SkylineAcademy.Models.ClassSchedule>

@{
    ViewData["Title"] = "Class Schedules";
}

<br />

<p>

    @if (User.IsInRole("Admin"))
    {
        <a asp-area="" asp-controller="AdministratorDashboard" asp-action="Index"><button type="button" class="btn btn-outline-primary">Back to Dashboard</button></a>

    }
    else if (User.IsInRole("Student"))
    {
        <a asp-area="" asp-controller="StudentDashboard" asp-action="Index"><button type="button" class="btn btn-outline-primary">Back to Dashboard</button></a>

    }
    else if (User.IsInRole("Teacher"))
    {
        <a asp-area="" asp-controller="TeacherDashboard" asp-action="Index"><button type="button" class="btn btn-outline-primary">Back to Dashboard</button></a>

    }
    else if (User.IsInRole("SuperAdmin"))
    {
        <a class="nav-link" asp-area="" asp-controller="Home" asp-action="Index"><button type="button" class="btn btn-outline-primary">Home</button></a>
    }

</p>

<h1 align="center">Class Schedules</h1>
<br />
@if (User.IsInRole("Admin"))
{
    <p align="right">
        <a asp-action="Create"><button type="button" class="btn btn-outline-primary">Create New</button></a>
    </p>
}
else if (User.IsInRole("SuperAdmin"))
{
    <p align="right">
        <a asp-action="Create"><button type="button" class="btn btn-outline-primary">Create New</button></a>
    </p>
}
else
{
    <br />
}

<div class="table grid-container">
@(
Html
 .Grid(Model)
 .Build(columns =>
 {
     columns.Add(model => model.ScheduleId).Titled("Schedule ID");
     columns.Add(model => model.CourseId).Titled("Course ID");
     columns.Add(model => model.TeacherId).Titled("Teacher ID");
     columns.Add(model => model.ClassroomId).Titled("Classroom");
     columns.Add(model => model.Semester).Titled("Semester");
     columns.Add(model => model.Academicyear).Titled("Academic Year");
     columns.Add(model => model.SlotId).Titled("Slot");


            if (User.IsInRole("Admin"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Edit", "Edit", new
                {
                    id =
                model.ScheduleId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.ScheduleId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Delete", "Delete", new
                {
                    id =
                model.ScheduleId
                })).Filterable(false);
            }
            else if (User.IsInRole("Student"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.ScheduleId
                })).Filterable(false);
            }
            else if (User.IsInRole("Teacher"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.ScheduleId
                })).Filterable(false);
            }
            else if (User.IsInRole("SuperAdmin"))
            {
                columns.Add().RenderedAs(model => Html.ActionLink("Edit", "Edit", new
                {
                    id =
                model.ScheduleId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Details", "Details", new
                {
                    id =
                model.ScheduleId
                })).Filterable(false);


                columns.Add().RenderedAs(model => Html.ActionLink("Delete", "Delete", new
                {
                    id =
                model.ScheduleId
                })).Filterable(false);
            }

 })

 .Empty("No data found")
 .Filterable()
 .Sortable()
 .Pageable(pager =>
 {
     pager.RowsPerPage = 10;
 })
)
</div>
@section Scripts {
    <script>
        document.querySelectorAll(".mvc-grid").forEach(element => new MvcGrid(element));
    </script>
}

<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-xl">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Slot Schedule</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true"></span>
          </button>
        </div>
        <div class="modal-body">
          <p>
            <table class="table">
                              <tr>
                    <th></th>
                    <th>Sunday</th>
                    <th>Monday</th>
                    <th>Tuesday</th>
                    <th>Wednesday</th>
                    <th>Thursday</th>
                </tr>
                <tr>
                    <th>8am to 10am</th>
                    <td>1</td>
                    <td>2</td>
                    <td>3</td>
                    <td>4</td>
                    <td>5</td>
                </tr>
                <tr>
                    <th>10am to 12pm</th>
                    <td>6</td>
                    <td>7</td>
                    <td>8</td>
                    <td>9</td>
                    <td>10</td>
                </tr>
                <tr>
                    <th>12pm to 2pm</th>
                    <td>11</td>
                    <td>12</td>
                    <td>13</td>
                    <td>14</td>
                    <td>15</td>
                </tr>
                <tr>
                    <th>2pm to 4pm</th>
                    <td>16</td>
                    <td>17</td>
                    <td>18</td>
                    <td>19</td>
                    <td>20</td>
                </tr>
                <tr>
                    <th>4pm to 6pm</th>
                    <td>21</td>
                    <td>22</td>
                    <td>23</td>
                    <td>24</td>
                    <td>25</td>
                </tr>
                <tr>
                    <th>6pm to 8pm</th>
                    <td>26</td>
                    <td>27</td>
                    <td>28</td>
                    <td>29</td>
                    <td>30</td>
                </tr>
            </table>
          </p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
</div>

<button type="button" class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#myModal">Slot</button>